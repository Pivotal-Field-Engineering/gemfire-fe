---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
  - name: find ami
    ec2_ami_find:
      owner: self
      name: base
      no_result_action: fail
    register: ami_find
  
- hosts: localhost
  vars:
    kafka_private_ips: ["172.31.0.11","172.31.0.12","172.31.0.13"]
  connection: local
  gather_facts: false
  tasks:
  - name: create kafka instances
    ec2:
      image: "{{ ami_find.results[0].ami_id }}"
      instance_type: t2.micro
      group_id: sg-4cf03b2a
      vpc_subnet_id: subnet-914ebfc9
      key_name: tdalsing@tdalsing-mbp.local
      instance_profile_name: s3_read_role
      private_ip: "{{ item }}"
      wait: true
      volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "10"
        delete_on_termination: yes
    register: kafka
    with_items: "{{ kafka_private_ips }}"
  - name: create data volume
    ec2_vol:
      instance: "{{ item.instances[0].id }}"
      volume_type: gp2
      volume_size: "100"
      delete_on_termination: true
    with_items: "{{ kafka.results }}"
  - name: tag kafka instances
    ec2_tag:
      resource: "{{ item.instances[0].id }}"
      state: present
      tags:
        Name: kafka
        Project: iot_demo
    with_items: "{{ kafka.results }}"
  - name: add kafka instance to group
    add_host: hostname={{ item.instances[0].public_ip }} groupname=kafka
    with_items: "{{ kafka.results }}"
  - name: Add instance to local host group
    local_action: lineinfile dest=kafka_hosts regexp="{{ item.instances[0].public_ip }}" line="{{ item.instances[0].public_ip }}" state=present
    with_items: "{{ kafka.results }}"   
    
- hosts: kafka
  vars:
    kafka_private_ips: ["172.31.0.11","172.31.0.12","172.31.0.13"]
  remote_user: centos
  become: true
  gather_facts: false
  tasks:
  - name: update yum
    yum:
      name: '*'
      state: latest
  - name: partition data volume
    parted:
      device: /dev/xvdf
      state: present
      number: 1
  - name: format data volume
    filesystem:
      dev: /dev/xvdf1
      fstype: ext4
  - name: create mount point
    file:
      path: /data
      state: directory
  - name: mount data volume
    mount:
      src: /dev/xvdf1
      path: /data
      fstype: ext4
      state: present
  - name: download kafka
    s3:
      bucket: pivotal-iot-demo-files
      object: kafka_2.12-0.11.0.0.tgz
      dest: /tmp/kafka_2.12-0.11.0.0.tgz
      mode: get
  - name: install kafka
    shell: tar xfz /tmp/kafka_2.12-0.11.0.0.tgz -C /opt
  - name: delete tarball
    file:
      path: /tmp/kafka_2.12-0.11.0.0.tgz
      state: absent      
  - name: update zookeeper config
    debug:
      msg: "ITEM: {{ item }}"
    with_items: "{{ kafka_private_ips }}"